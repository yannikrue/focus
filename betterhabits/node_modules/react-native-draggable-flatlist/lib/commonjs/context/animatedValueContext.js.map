{"version":3,"names":["AnimatedValueContext","React","createContext","undefined","AnimatedValueProvider","children","value","useSetupAnimatedValues","useAnimatedValues","useContext","Error","props","useProps","DEFAULT_VAL","useSharedValue","containerSize","scrollViewSize","panGestureState","GestureState","UNDETERMINED","touchTranslate","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","useAnimatedReaction","cur","prev","placeholderOffset","isDraggingCell","useDerivedValue","autoScrollDistance","innerScrollDiff","outerScrollDiff","scrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","hoverAnim","dragItemOverflow","hoverOffset","isHovering","resetTouchedCell","useCallback","useMemo","useEffect","onAnimValInit"],"sources":["animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n    const scrollDiff = innerScrollDiff + outerScrollDiff;\n    return scrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return props.dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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"}