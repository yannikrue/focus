{"version":3,"names":["useCellTranslate","cellIndex","cellSize","cellOffset","useAnimatedValues","activeIndexAnim","activeCellSize","hoverOffset","spacerIndexAnim","placeholderOffset","hoverAnim","viewableIndexMin","viewableIndexMax","useDraggableFlatListContext","activeKey","useRefs","animationConfigRef","translate","useDerivedValue","isActiveCell","value","isOutsideViewableRange","isBeforeActive","isAfterActive","hoverPlusActiveSize","offsetPlusHalfSize","offsetPlusSize","result","newPlaceholderOffset","shouldTranslate","translationAmt","withSpring","current"],"sources":["useCellTranslate.tsx"],"sourcesContent":["import Animated, { useDerivedValue, withSpring } from \"react-native-reanimated\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { useRefs } from \"../context/refContext\";\n\ntype Params = {\n  cellIndex: number;\n  cellSize: Animated.SharedValue<number>;\n  cellOffset: Animated.SharedValue<number>;\n};\n\nexport function useCellTranslate({ cellIndex, cellSize, cellOffset }: Params) {\n  const {\n    activeIndexAnim,\n    activeCellSize,\n    hoverOffset,\n    spacerIndexAnim,\n    placeholderOffset,\n    hoverAnim,\n    viewableIndexMin,\n    viewableIndexMax,\n  } = useAnimatedValues();\n\n  const { activeKey } = useDraggableFlatListContext();\n\n  const { animationConfigRef } = useRefs();\n\n  const translate = useDerivedValue(() => {\n    const isActiveCell = cellIndex === activeIndexAnim.value;\n    const isOutsideViewableRange =\n      !isActiveCell &&\n      (cellIndex < viewableIndexMin.value ||\n        cellIndex > viewableIndexMax.value);\n    if (!activeKey || activeIndexAnim.value < 0 || isOutsideViewableRange) {\n      return 0;\n    }\n\n    // Determining spacer index is hard to visualize. See diagram: https://i.imgur.com/jRPf5t3.jpg\n    const isBeforeActive = cellIndex < activeIndexAnim.value;\n    const isAfterActive = cellIndex > activeIndexAnim.value;\n\n    const hoverPlusActiveSize = hoverOffset.value + activeCellSize.value;\n    const offsetPlusHalfSize = cellOffset.value + cellSize.value / 2;\n    const offsetPlusSize = cellOffset.value + cellSize.value;\n    let result = -1;\n\n    if (isAfterActive) {\n      if (\n        hoverPlusActiveSize >= cellOffset.value &&\n        hoverPlusActiveSize < offsetPlusHalfSize\n      ) {\n        // bottom edge of active cell overlaps top half of current cell\n        result = cellIndex - 1;\n      } else if (\n        hoverPlusActiveSize >= offsetPlusHalfSize &&\n        hoverPlusActiveSize < offsetPlusSize\n      ) {\n        // bottom edge of active cell overlaps bottom half of current cell\n        result = cellIndex;\n      }\n    } else if (isBeforeActive) {\n      if (\n        hoverOffset.value < offsetPlusSize &&\n        hoverOffset.value >= offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps bottom half of current cell\n        result = cellIndex + 1;\n      } else if (\n        hoverOffset.value >= cellOffset.value &&\n        hoverOffset.value < offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps top half of current cell\n        result = cellIndex;\n      }\n    }\n\n    if (result !== -1 && result !== spacerIndexAnim.value) {\n      spacerIndexAnim.value = result;\n    }\n\n    if (spacerIndexAnim.value === cellIndex) {\n      const newPlaceholderOffset = isAfterActive\n        ? cellSize.value + (cellOffset.value - activeCellSize.value)\n        : cellOffset.value;\n      placeholderOffset.value = newPlaceholderOffset;\n    }\n\n    // Active cell follows touch\n    if (isActiveCell) {\n      return hoverAnim.value;\n    }\n\n    // Translate cell down if it is before active index and active cell has passed it.\n    // Translate cell up if it is after the active index and active cell has passed it.\n\n    const shouldTranslate = isAfterActive\n      ? cellIndex <= spacerIndexAnim.value\n      : cellIndex >= spacerIndexAnim.value;\n\n    const translationAmt = shouldTranslate\n      ? activeCellSize.value * (isAfterActive ? -1 : 1)\n      : 0;\n\n    return withSpring(translationAmt, animationConfigRef.current);\n  }, [activeKey, cellIndex]);\n\n  return translate;\n}\n"],"mappings":"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"}