{"version":3,"names":["useDerivedValue","withSpring","useAnimatedValues","useDraggableFlatListContext","useRefs","useCellTranslate","cellIndex","cellSize","cellOffset","activeIndexAnim","activeCellSize","hoverOffset","spacerIndexAnim","placeholderOffset","hoverAnim","viewableIndexMin","viewableIndexMax","activeKey","animationConfigRef","translate","isActiveCell","value","isOutsideViewableRange","isBeforeActive","isAfterActive","hoverPlusActiveSize","offsetPlusHalfSize","offsetPlusSize","result","newPlaceholderOffset","shouldTranslate","translationAmt","current"],"sources":["useCellTranslate.tsx"],"sourcesContent":["import Animated, { useDerivedValue, withSpring } from \"react-native-reanimated\";\nimport { useAnimatedValues } from \"../context/animatedValueContext\";\nimport { useDraggableFlatListContext } from \"../context/draggableFlatListContext\";\nimport { useRefs } from \"../context/refContext\";\n\ntype Params = {\n  cellIndex: number;\n  cellSize: Animated.SharedValue<number>;\n  cellOffset: Animated.SharedValue<number>;\n};\n\nexport function useCellTranslate({ cellIndex, cellSize, cellOffset }: Params) {\n  const {\n    activeIndexAnim,\n    activeCellSize,\n    hoverOffset,\n    spacerIndexAnim,\n    placeholderOffset,\n    hoverAnim,\n    viewableIndexMin,\n    viewableIndexMax,\n  } = useAnimatedValues();\n\n  const { activeKey } = useDraggableFlatListContext();\n\n  const { animationConfigRef } = useRefs();\n\n  const translate = useDerivedValue(() => {\n    const isActiveCell = cellIndex === activeIndexAnim.value;\n    const isOutsideViewableRange =\n      !isActiveCell &&\n      (cellIndex < viewableIndexMin.value ||\n        cellIndex > viewableIndexMax.value);\n    if (!activeKey || activeIndexAnim.value < 0 || isOutsideViewableRange) {\n      return 0;\n    }\n\n    // Determining spacer index is hard to visualize. See diagram: https://i.imgur.com/jRPf5t3.jpg\n    const isBeforeActive = cellIndex < activeIndexAnim.value;\n    const isAfterActive = cellIndex > activeIndexAnim.value;\n\n    const hoverPlusActiveSize = hoverOffset.value + activeCellSize.value;\n    const offsetPlusHalfSize = cellOffset.value + cellSize.value / 2;\n    const offsetPlusSize = cellOffset.value + cellSize.value;\n    let result = -1;\n\n    if (isAfterActive) {\n      if (\n        hoverPlusActiveSize >= cellOffset.value &&\n        hoverPlusActiveSize < offsetPlusHalfSize\n      ) {\n        // bottom edge of active cell overlaps top half of current cell\n        result = cellIndex - 1;\n      } else if (\n        hoverPlusActiveSize >= offsetPlusHalfSize &&\n        hoverPlusActiveSize < offsetPlusSize\n      ) {\n        // bottom edge of active cell overlaps bottom half of current cell\n        result = cellIndex;\n      }\n    } else if (isBeforeActive) {\n      if (\n        hoverOffset.value < offsetPlusSize &&\n        hoverOffset.value >= offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps bottom half of current cell\n        result = cellIndex + 1;\n      } else if (\n        hoverOffset.value >= cellOffset.value &&\n        hoverOffset.value < offsetPlusHalfSize\n      ) {\n        // top edge of active cell overlaps top half of current cell\n        result = cellIndex;\n      }\n    }\n\n    if (result !== -1 && result !== spacerIndexAnim.value) {\n      spacerIndexAnim.value = result;\n    }\n\n    if (spacerIndexAnim.value === cellIndex) {\n      const newPlaceholderOffset = isAfterActive\n        ? cellSize.value + (cellOffset.value - activeCellSize.value)\n        : cellOffset.value;\n      placeholderOffset.value = newPlaceholderOffset;\n    }\n\n    // Active cell follows touch\n    if (isActiveCell) {\n      return hoverAnim.value;\n    }\n\n    // Translate cell down if it is before active index and active cell has passed it.\n    // Translate cell up if it is after the active index and active cell has passed it.\n\n    const shouldTranslate = isAfterActive\n      ? cellIndex <= spacerIndexAnim.value\n      : cellIndex >= spacerIndexAnim.value;\n\n    const translationAmt = shouldTranslate\n      ? activeCellSize.value * (isAfterActive ? -1 : 1)\n      : 0;\n\n    return withSpring(translationAmt, animationConfigRef.current);\n  }, [activeKey, cellIndex]);\n\n  return translate;\n}\n"],"mappings":"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"}